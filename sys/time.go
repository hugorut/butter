package sys

import (
	"time"

	"github.com/stretchr/testify/mock"
)

type Time interface {
	Now() time.Time
}

// OSTime is a wrapper around the time function for the core os package
type OSTime struct{}

func (OSTime) Now() time.Time { return time.Now() }

// Time is an autogenerated mock type for the Time type
type MockTime struct {
	mock.Mock
}

// Now provides a mock function with given fields:
func (_m *MockTime) Now() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}
